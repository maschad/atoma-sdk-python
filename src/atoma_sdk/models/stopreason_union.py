"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from atoma_sdk.types import BaseModel
import pydantic
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class StopReason2TypedDict(TypedDict):
    string: str


class StopReason2(BaseModel):
    string: Annotated[str, pydantic.Field(alias="String")]


class StopReason1TypedDict(TypedDict):
    int_: int


class StopReason1(BaseModel):
    int_: Annotated[int, pydantic.Field(alias="Int")]


StopReasonUnionTypedDict = TypeAliasType(
    "StopReasonUnionTypedDict", Union[StopReason1TypedDict, StopReason2TypedDict]
)
r"""Represents the stop reason.

This is used to represent the stop reason in the chat completion request.
It can be either a stop reason or a stop reason choice.
"""


StopReasonUnion = TypeAliasType("StopReasonUnion", Union[StopReason1, StopReason2])
r"""Represents the stop reason.

This is used to represent the stop reason in the chat completion request.
It can be either a stop reason or a stop reason choice.
"""
