"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .messagecontentpartimageurl import (
    MessageContentPartImageURL,
    MessageContentPartImageURLTypedDict,
)
from atoma_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


class MessageContentPart2TypedDict(TypedDict):
    image_url: MessageContentPartImageURLTypedDict
    r"""Represents the image URL of a message content part.

    This is used to represent the image URL of a message content part in the chat completion request.
    It can be either a URL or a base64 encoded image data.
    """
    type: str
    r"""The type of the content part."""


class MessageContentPart2(BaseModel):
    image_url: MessageContentPartImageURL
    r"""Represents the image URL of a message content part.

    This is used to represent the image URL of a message content part in the chat completion request.
    It can be either a URL or a base64 encoded image data.
    """

    type: str
    r"""The type of the content part."""


class MessageContentPart1TypedDict(TypedDict):
    text: str
    r"""The text content."""
    type: str
    r"""The type of the content part."""


class MessageContentPart1(BaseModel):
    text: str
    r"""The text content."""

    type: str
    r"""The type of the content part."""


MessageContentPartUnionTypedDict = TypeAliasType(
    "MessageContentPartUnionTypedDict",
    Union[MessageContentPart1TypedDict, MessageContentPart2TypedDict],
)
r"""Represents a part of a message content.

This is used to represent the content of a message in the chat completion request.
It can be either a text or an image.
"""


MessageContentPartUnion = TypeAliasType(
    "MessageContentPartUnion", Union[MessageContentPart1, MessageContentPart2]
)
r"""Represents a part of a message content.

This is used to represent the content of a message in the chat completion request.
It can be either a text or an image.
"""
